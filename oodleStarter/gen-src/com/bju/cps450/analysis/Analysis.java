/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.bju.cps450.analysis;

import com.bju.cps450.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTIgnoredNewline(TIgnoredNewline node);
    void caseTNewline(TNewline node);
    void caseTBlank(TBlank node);
    void caseTBoolean(TBoolean node);
    void caseTBegin(TBegin node);
    void caseTClass(TClass node);
    void caseTElse(TElse node);
    void caseTEnd(TEnd node);
    void caseTFalse(TFalse node);
    void caseTFrom(TFrom node);
    void caseTIf(TIf node);
    void caseTInherits(TInherits node);
    void caseTInt(TInt node);
    void caseTIs(TIs node);
    void caseTLoop(TLoop node);
    void caseTMe(TMe node);
    void caseTNew(TNew node);
    void caseTNull(TNull node);
    void caseTString(TString node);
    void caseTThen(TThen node);
    void caseTTrue(TTrue node);
    void caseTWhile(TWhile node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTNot(TNot node);
    void caseTIntLiteral(TIntLiteral node);
    void caseTStrStart(TStrStart node);
    void caseTStrIteral(TStrIteral node);
    void caseTUnterminatedStr(TUnterminatedStr node);
    void caseTIllegalStr(TIllegalStr node);
    void caseTStrconcat(TStrconcat node);
    void caseTAddition(TAddition node);
    void caseTSubtraction(TSubtraction node);
    void caseTMultiplication(TMultiplication node);
    void caseTDivision(TDivision node);
    void caseTComparison(TComparison node);
    void caseTAssignment(TAssignment node);
    void caseTLparen(TLparen node);
    void caseTRparen(TRparen node);
    void caseTLbrace(TLbrace node);
    void caseTRbrace(TRbrace node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTDot(TDot node);
    void caseTIdentifier(TIdentifier node);
    void caseTInvalidIdentifier(TInvalidIdentifier node);
    void caseTComment(TComment node);
    void caseTUnknown(TUnknown node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
